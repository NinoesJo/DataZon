-- Feel free to modify this file to match your development goal.
-- Feel free to modify this file to match your development goal.
-- Here we only create 3 tables for demo purpose.

--CREATE TABLE Users (
--    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--    email VARCHAR UNIQUE NOT NULL,
--    password VARCHAR(255) NOT NULL,
--    firstname VARCHAR(255) NOT NULL,
--    lastname VARCHAR(255) NOT NULL
--);

--CREATE TABLE Products (
--    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--    name VARCHAR(255) UNIQUE NOT NULL,
--    price DECIMAL(12,2) NOT NULL,
--    available BOOLEAN DEFAULT TRUE
--);

--CREATE TABLE Purchases (
--    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--    uid INT NOT NULL REFERENCES Users(id),
--    pid INT NOT NULL REFERENCES Products(id),
--    time_purchased timestamp without time zone NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC')
--;



CREATE TABLE Account(
    user_id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    email VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    full_name VARCHAR(255) NOT NULL,
    balance DECIMAL(10,2) NOT NULL CHECK(balance >= 0 AND balance < 9999999999.99),
    is_seller BOOLEAN NOT NULL,
    street VARCHAR(255),
    city VARCHAR(255),
    state VARCHAR(255),
    zip_code VARCHAR(11),
    country VARCHAR(255)
);

CREATE TABLE Category(
    category_id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    category_name VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE Product(
   product_id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
   category_id INT NOT NULL REFERENCES Category(category_id), 
   product_name VARCHAR(255) NOT NULL,
   product_description VARCHAR(4000) NOT NULL,
   image_url VARCHAR(255) NOT NULL
);

CREATE TABLE ProductListing(
    product_id INT NOT NULL REFERENCES Product(product_id),
    seller_id INT NOT NULL REFERENCES Account(user_id),
    price DECIMAL(9,2) NOT NULL CHECK(price >= 0 AND price < 999999999.99),
    inventory_count INTEGER NOT NULL CHECK(inventory_count >= 0),
    PRIMARY KEY (product_id, seller_id)
);

CREATE TABLE OrderSummary(
    order_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    user_id INT NOT NULL REFERENCES Account(user_id),
    total_cost DECIMAL (9,2) NOT NULL CHECK (total_cost >= 0),
    item_quantity INT NOT NULL CHECK (item_quantity >= 0),
    datetime_placed timestamp without time zone NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC'),
    PRIMARY KEY (order_id)
);


CREATE TABLE OrderItem(
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    seller_id INT NOT NULL,
    quantity INT NOT NULL CHECK (quantity >= 0),
    quantity_price DECIMAL (9,2) NOT NULL CHECK (quantity_price >= 0),
    is_fulfilled BOOLEAN NOT NULL,
    PRIMARY KEY (order_id, product_id, seller_id)
);

CREATE TABLE CartItem(
    user_id INT NOT NULL,
    product_id INT NOT NULL REFERENCES Product(product_id),
    seller_id INT NOT NULL,
    quantity INT NOT NULL CHECK (quantity >= 0),
    saved_for_later BOOLEAN NOT NULL,
    PRIMARY KEY (user_id, product_id, seller_id),
    FOREIGN KEY (user_id) REFERENCES Account(user_id),
    FOREIGN KEY (seller_id) REFERENCES Account(user_id)
);

CREATE TABLE ProductReviews(
    user_id INT NOT NULL REFERENCES Account(user_id),
    product_id INT NOT NULL REFERENCES Product(product_id),
    rating INT NOT NULL CHECK(rating BETWEEN 0 AND 9),
    datetime TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC'),
    title VARCHAR(255) NOT NULL,
    description VARCHAR(2500),
    upvote_count INT NOT NULL CHECK (upvote_count >= 0),
    edited_on TIMESTAMP WITHOUT TIME ZONE DEFAULT NULL,
    PRIMARY KEY (user_id, product_id)
);

CREATE TABLE SellerReviews(
    user_id INT NOT NULL,
    seller_id INT NOT NULL,
    rating INT NOT NULL CHECK (rating BETWEEN 0 AND 9),
    datetime TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC'),
    title VARCHAR(255) NOT NULL,
    description VARCHAR(2500),
    upvote_count INT NOT NULL CHECK (upvote_count >= 0),
    edited_on TIMESTAMP WITHOUT TIME ZONE DEFAULT NULL,
    PRIMARY KEY (user_id, seller_id),
    FOREIGN KEY (user_id) REFERENCES Account(user_id),
    FOREIGN KEY (seller_id) REFERENCES Account(user_id)
);

CREATE TABLE ProductReviewUpvote(
    reviewer_id INT NOT NULL,
    product_id INT NOT NULL,
    upvoter_id INT NOT NULL,
    datetime TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC'),
    PRIMARY KEY (reviewer_id, product_id, upvoter_id),
    FOREIGN KEY (reviewer_id) REFERENCES Account(user_id),
    FOREIGN KEY (product_id) REFERENCES Product(product_id),
    FOREIGN KEY (upvoter_id) REFERENCES Account(user_id)
);

CREATE TABLE SellerReviewUpvote(
    reviewer_id INT NOT NULL,
    seller_id INT NOT NULL,
    upvoter_id INT NOT NULL,
    datetime TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC'),
    PRIMARY KEY (reviewer_id, seller_id, upvoter_id),
    FOREIGN KEY (reviewer_id) REFERENCES Account(user_id),
    FOREIGN KEY (seller_id) REFERENCES Account(user_id),
    FOREIGN KEY (upvoter_id) REFERENCES Account(user_id)
);

CREATE TABLE Users (
    id SERIAL PRIMARY KEY,
    email VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    firstname VARCHAR(255) NOT NULL,
    lastname VARCHAR(255) NOT NULL
);